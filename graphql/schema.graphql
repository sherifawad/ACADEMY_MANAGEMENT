### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Attendance {
  createdBy: String
  endAt: DateTime
  group: Group
  id: String
  note: String
  profile: Profile
  profileId: String
  startAt: DateTime
  updatedBy: String
}

"""Payload containing auth token"""
type AuthPayload {
  token: String!
  user: User
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Exam {
  createdAt: DateTime
  createdBy: String
  date: DateTime
  id: String
  note: String
  profile: Profile
  score: Float
  updatedAt: DateTime
  updatedBy: String
}

type Grade {
  createdAt: DateTime
  createdBy: String
  groups: [Group]
  id: String!
  name: String
  profiles: [Profile]
  updatedAt: DateTime
  updatedBy: String
}

type Group {
  attendance: [Attendance]
  createdAt: DateTime
  createdBy: String
  endAt: String
  grade: Grade
  id: String
  name: String
  profiles: [Profile]
  startAt: String
  updatedAt: DateTime
  updatedBy: String
}

type Mutation {
  createAttendance(endAt: DateTime, note: String, profileId: String!, startAt: DateTime!): Attendance!
  createExam(date: DateTime!, note: String, score: String!): Exam!
  createGrade(name: String!): Grade!
  createGroup(endAt: DateTime, name: String!, startAt: DateTime): Group!
  createProfile(bio: String, id: String!): Profile!
  deleteAttendance(id: String!): Attendance!
  deleteExam(id: String!): Exam!
  deleteGrade(id: String!): Grade!
  deleteGroup(id: String!): Group!
  deleteProfile(id: String!): Profile!
  updateAttendance(endAt: DateTime, id: String!, note: String, profileId: String, startAt: DateTime): Attendance!
  updateExam(date: DateTime, id: String!, note: String, score: String): Exam!
  updateGrade(id: String!, name: String!): Grade!
  updateGroup(endAt: DateTime, id: String!, name: String, startAt: DateTime): Group!
  updateProfile(bio: String, id: String!): Profile!
  updateUser(avatar: String, email: String, id: String!, name: String, password: String): User!
  userLogin(email: String!, password: String!): AuthPayload!
  userRegister(avatar: String, email: String!, name: String, password: String!): User!
}

type Profile {
  attendances: [Attendance]
  bio: String
  createdAt: DateTime
  createdBy: String
  exams: [Exam]
  group: Group
  id: String
  updatedAt: DateTime
  updatedBy: String
  users: [User]
}

type Query {
  AttendanceInDate(date: DateTime!, id: String!): Attendance!
  Attendances(id: String!): [Attendance]!
  Exam(id: String!): Exam!
  Exams: [Exam]!
  Grade(id: String!): Grade!
  Grades: [Grade]!
  Group(id: String!): Group!
  Groups: [Group]!
  Profile(id: String!): Profile!
  Profiles: [Profile]!
  User(id: String!): User!
  Users: [User]
}

"""User Role"""
enum Role {
  ADMIN
  Student
  USER
}

"""
A time string at UTC, such as 10:15:30Z, compliant with the `full-time` format outlined in section 5.6 of the RFC 3339profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Time

type User {
  avatar: String
  createdAt: DateTime
  email: String
  emailConfirmed: Boolean
  id: String
  name: String
  profile: Profile
  role: Role
  updatedAt: DateTime
}
